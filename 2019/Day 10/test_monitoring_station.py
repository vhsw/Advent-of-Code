"""Day 10 Tests"""

import pytest
from monitoring_station import (
    max_asteroids,
    parse_field,
    count_at_pos,
    vaporization_order,
    part1,
    part2,
    Point,
)


@pytest.mark.parametrize(
    "text, target, count",
    [
        [
            """.#..#
.....
#####
....#
...##""",
            (3, 4),
            8,
        ],
        [
            """......#.#.
#..#.#....
..#######.
.#.#.###..
.#..#.....
..#....#.#
#..#....#.
.##.#..###
##...#..#.
.#....####""",
            (5, 8),
            33,
        ],
        [
            """#.#...#.#.
.###....#.
.#....#...
##.#.#.#.#
....#.#.#.
.##..###.#
..#...##..
..##....##
......#...
.####.###.""",
            (1, 2),
            35,
        ],
        [
            """.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##""",
            (11, 13),
            210,
        ],
    ],
)
def test_max_asteroids(text, target, count):
    field = parse_field(text)
    pos = max_asteroids(field)
    num = count_at_pos(pos, field)
    assert pos == target
    assert num == count


def test_vaporization_order_big():
    src = Point(11, 13)
    text = """.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##"""
    field = parse_field(text)
    order = vaporization_order(src, field)

    assert order[0] == (11, 12)
    assert order[1] == (12, 1)
    assert order[2] == (12, 2)
    assert order[9] == (12, 8)
    assert order[19] == (16, 0)
    assert order[49] == (16, 9)
    assert order[99] == (10, 16)
    assert order[198] == (9, 6)
    assert order[199] == (8, 2)
    assert order[200] == (10, 9)
    assert order[298] == (11, 1)


def test_parts():
    assert part1() == 227
    assert part2() == 604
